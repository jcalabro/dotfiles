#!/usr/bin/env bash

#
# SSH
#
alias jimvm="ssh jimvm"
alias jl="ssh jlinux01"

#
# Editor
#
alias x="hx"
alias vim="nvim"
alias vi="vim"
alias v="vim"
alias vba="$EDITOR ~/.bash_aliases"
alias vbg="$EDITOR ~/.bash_go"
alias vbw="$EDITOR ~/.bash_w"
alias vbp="$EDITOR ~/.bashrc"
alias vbs="$EDITOR ~/.bash_secrets"
alias vbh="$EDITOR ~/.bash_history"
alias vh="$EDITOR ~/.config/helix/config.toml"
alias vrc="$EDITOR ~/.vimrc"
alias vlua="$EDITOR ~/.config/nvim/lua/config.lua"
alias vrp="$EDITOR ~/.vim_plugins"
alias vkc="$EDITOR ~/.kube/config"
alias vtm="$EDITOR ~/.tmux.conf"
alias vi3="$EDITOR ~/.config/i3/config"
alias vyab="$EDITOR ~/.config/yabai/yabairc"
alias vskhd="$EDITOR ~/.config/skhd/skhdrc"
alias vhx="$EDITOR ~/.config/helix/config.toml"
alias val="$EDITOR ~/.config/alacritty/alacritty.toml"
alias vg="$EDITOR ~/.config/ghostty/config"
alias va="$EDITOR ~/.config/aerospace/aerospace.toml"

#
# Git
#
alias s="git status"
alias b="git branch"
alias gpr="git pull -r"
alias gc="git checkout"
alias gcb="git checkout -B"
alias gc-="git checkout --"
alias undo="git reset HEAD^"
alias d="git diff"
alias gl="git log"
alias gs="git stash"
alias am="git add -A; git commit -S -m"
alias gcm="git commit -S -m"
alias amend="git commit --amend -S -m"
alias clean="git clean -fd"
alias update="am 'update' && gp"
alias prune="git remote prune origin"

function gp {
    git branch --no-color | grep '*' | cut -f 2 -d " " | xargs -L1 git push -u origin
}

function gpsu {
    git branch --no-color | grep '*' | awk '{print $2}' | xargs -L1 git push -u origin
}

# ls/eza
which eza &> /dev/null
if [ "$?" -eq "0" ]; then
    alias ls="eza -l"
else
    alias ls="ls -lh --color"
fi
alias l="ls"

# cat/bat
which bat &> /dev/null
if [ "$?" -eq "0" ]; then
    alias cat="bat"
fi

# du/dust
which dust &> /dev/null
if [ "$?" -eq "0" ]; then
    alias du="dust"
fi

# df/dysk
which dysk &> /dev/null
if [ "$?" -eq "0" ]; then
    alias df="dysk"
fi

# find/fd
which fd &> /dev/null
if [ "$?" -eq "0" ]; then
    alias find="fd"
fi

#
# tmux
#
alias tmux="tmux -2"
alias t="tmux"
alias tm="tmux"
alias tl="tmux ls"
alias tml="tmux l"
alias ta="tmux a"
alias tma="tmux a"
alias a="tmux a"

#
# Grep/ripgrep
#
alias r="rg"

#
# Docker/docker-compose/kubernetes
#
alias dps="docker ps"
alias dl="docker logs"
alias di="docker images"
alias dc="docker compose"
alias dcd="docker compose down --volumes"
alias dcu="docker compose up -d"
alias dbl="dc logs -f db"
alias db=". db/shell.sh"
alias k="kubectl"
alias kx="kubectx"
alias kn="kubens"

function klogs {
    kubectl get pods | rg $1 | head -n 1 | cut -f 1 -d " " | xargs kubectl logs -f
}

#
# Rust
#
alias c="cargo"
alias cb="cargo build"
alias cr="cargo run"
alias ct="cargo test"

#
# Misc
#
alias rsh="ssh -A -l root"
alias e="./unix.sh -run"
alias m="make"
alias fail="tail -f"
alias cdt="gh jcalabro/trunk"
alias gm="gh jcalabro/uscope"
alias z="zig"
alias zb="zig build -freference-trace"
alias zr="zb run -freference-trace"
alias zrr="zb run -freference-trace -Drace"
alias zt="zb test --summary all -freference-trace"
alias ztr="zb test -freference-trace -Drace"
alias tsu="sudo tailscale up"
alias tsd="sudo tailscale down"
alias tss="tailscale status"
alias p="python3"
alias j="just"

function clear_zig_caches {
    rm -rf .zig
    rm -rf $HOME/.cache/zig
}

function debugger {
    /home/jcalabro/go/src/github.com/jcalabro/uscope/zig-out/bin/uscope "$@"
}

function build {
    pushd assets/$1 > /dev/null
    ./build.sh
    popd > /dev/null
}

function jai {
    if [ $(uname -s) == "Darwin" ]; then
        jai-macos "$@"
    else
        jai-linux "$@"
    fi
}

if [ $(uname -s) == "Darwin" ]; then
    alias jai="jai-macos"
fi

function zig_clear_cache {
    rm -rf zig-*
    rm -rf $HOME/.cache/zig
}

function mac_netstat {
    lsof -nP -i4TCP | grep -i listen
}

function adump {
    dwarfdump ./assets/$1/out | less
}
function odump {
    objdump -Sd ./assets/$1/out | less
}
function relf {
    readelf --debug-dump=$1 ./assets/$2/out | less
}

if ! command -v pbcopy &> /dev/null
then
    alias pbcopy="xclip -selection clipboard -i"
fi

#
# tmux project setup scripts
#

function dbg {
    tmux new-session -d -s dbg
    tmux send-keys -t dbg "gm && hx" Enter
    sleep .2
    tmux new-window -t dbg -c "#{pane_current_path}"
    tmux split-window -v -t dbg -c "#{pane_current_path}"
    tmux send-keys -t dbg "touch /tmp/uscope.log && clear && tail -f /tmp/uscope.log" Enter
    tmux last-pane -t dbg
    tmux last-window -t dbg
    tmux attach -t dbg
}
